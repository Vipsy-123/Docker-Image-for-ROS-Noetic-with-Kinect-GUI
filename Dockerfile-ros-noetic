#---------------ROS-Noetic Base File -------------------------#
FROM osrf/ros:noetic-desktop-full

# Example of installing programs
RUN apt-get update \
    && apt-get install -y \
    nano \
    vim \
    && rm -rf /var/lib/apt/lists/*

#---------------- Installing XBOX 360 Kinect dependencies and packages--------------------#

# Create a non-root user : change USERNAME=to_your_username
ARG USERNAME=vipul 
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Install additional packages required for building libfreenect
RUN apt-get update && apt-get install -y \
    git-core cmake freeglut3-dev pkg-config build-essential \
    libxmu-dev libxi-dev libusb-1.0-0-dev \
    && rm -rf /var/lib/apt/lists/*

# Switch to the non-root user
USER root

# Build and install libfreenect
WORKDIR /home/$USERNAME/catkin_ws/src
RUN git clone https://github.com/OpenKinect/libfreenect.git && \
    cd libfreenect && \
    mkdir build && \
    cd build && \
    cmake -L .. && \
    make && \
    make install && \
    ldconfig /usr/local/lib64/

# Clone freenect_stack into catkin workspace
WORKDIR /home/$USERNAME/catkin_ws/src
RUN git clone https://github.com/ros-drivers/freenect_stack.git

# Build the ROS workspace
WORKDIR /home/$USERNAME/catkin_ws
RUN /bin/bash -c "source /opt/ros/noetic/setup.bash && catkin_make"

#-------------------------------------------------------------------------------------------#
USER root

RUN groupadd --gid $USER_GID $USERNAME \
  && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
  && mkdir /home/$USERNAME/.config && chown $USER_UID:$USER_GID /home/$USERNAME/.config

# Set up sudo
RUN apt-get update \
  && apt-get install -y sudo \
  && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
  && chmod 0440 /etc/sudoers.d/$USERNAME \
  && rm -rf /var/lib/apt/lists/*

# Update the Ownership of worksapce to $USERNAME to avoid Permission denied issues while doing catkin_make
# RUN apt-get update && chown -R $USERNAME:$USERNAME /home/$USERNAME/catkin_ws

# Copy the entrypoint and bashrc scripts ,so we have our container's environment set up correctly
COPY entrypoint.sh /entrypoint.sh
COPY bashrc /home/${USERNAME}/.bashrc

# Set up entrypoint and default command
ENTRYPOINT ["/bin/bash", "/entrypoint.sh"]
CMD ["bash"]
